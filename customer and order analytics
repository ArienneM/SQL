In this example, I'm querying multiple tables for the database

-- How many order placed in January
SELECT COUNT(orderid)
FROM BIT_DB.JanSales
WHERE length(orderid) = 6
AND orderid <> 'Order ID';


--How many iPhone sales in January
SELECT COUNT(orderid)
FROM BIT_DB.JanSales
WHERE Product='iPhone'
AND length(orderid) = 6
AND orderid <> 'Order ID';

--Customer Account Numbers for February orders

SELECT distinct acctnum
FROM BIT_DB.customers cust

INNER JOIN BIT_DB.FebSales Feb
ON cust.order_id=FEB.orderid
WHERE length(orderid) = 6
AND orderid <> 'Order ID';


--Cheapest product sold in January and it's price
SELECT product, min(price)
FROM BIT_DB.JanSales Jan
GROUP BY product, price
ORDER BY price ASC
LIMIT 1;


--Total revenue for each product sold in January
SELECT sum(quantity)*price as revenue
,product
FROM BIT_DB.JanSales
GROUP BY product;


--Which products sold in February to specific address
SELECT SUM(quantity)
,product,
SUM(Quantity)*price AS Revenue
FROM BIT_DB.FebSales 
WHERE Location='548 Lincoln St, Seattle, WA 98101'
GROUP BY product

--How many customers ordered more than 2 products in February, what was their average spent

SELECT
count(distinct cust.acctnum),
avg(quantity*price)
FROM BIT_DB.FebSales Feb
LEFT JOIN BIT_DB.customers cust
ON FEB.orderid=cust.order_id
WHERE Feb.Quantity>2
AND length(orderid) = 6
AND orderid <> 'Order ID';


--Selecting order dates for specific dates

SELECT orderdate
FROM BIT_DB.FebSales
WHERE orderdate between '02/13/19 00:00' AND '02/18/19 00:00';

-- Checking locations for a specific time and date
SELECT location
FROM BIT_DB.FebSales
WHERE orderdate= '02/18/19 01:35';

-- Selecting amount of sales for a specific day
SELECT SUM(quantity)
FROM BIT_DB.FebSales
WHERE orderdate like '02/18/19%';

--Seeing how many batteries are available
SELECT distinct Product
FROM BIT_DB.FebSales
WHERE Product like '%Batteries%';

-- Checking prices that end in .99
SELECT distinct Product,price
FROM BIT_DB.FebSales
WHERE price like '%99';

-- Seeing what prodcuts were sold in Los Angeles and how many were sold
SELECT  Product
,SUM(quantity)
FROM BIT_DB.FebSales
WHERE location like '%Los Angeles%'
GROUP BY Product;


--Which locations in New York received at least 3 orders in January, and how many orders did they each receive?

SELECT distinct location
,count(orderid)
FROM BIT_DB.JanSales
WHERE location LIKE '%NY%'
AND length(orderid)=6
AND orderid <> 'Order ID'
GROUP BY location
HAVING count(orderID)>2;

--How many of each type of headphone were sold in February?
SELECT distinct
SUM(quantity) AS quantity,product
FROM BIT_DB.FebSales
WHERE product LIKE '%Headphones%'
GROUP BY product
;

--What was the average amount spent per account in February? 
SELECT sum(quantity*price)/count(cust.acctnum)
FROM BIT_DB.FebSales Feb
LEFT JOIN BIT_DB.customers cust
ON FEB.orderid=cust.order_id
WHERE length(orderid) = 6 
AND orderid <> 'Order ID';

--What was the average quantity of products purchased per account in February?

SELECT sum(quantity)/count(cust.acctnum)
FROM BIT_DB.FebSales Feb
LEFT JOIN BIT_DB.customers cust
ON Feb.orderid=cust.order_id
WHERE length(orderid)=6
AND orderid<> 'Order ID';

--Which product brought in the most revenue in January and how much revenue did it bring in total?

SELECT SUM(quantity*price)AS Revenue,
product
FROM BIT_DB.JanSales
GROUP BY product
ORDER BY (quantity*price) desc
LIMIT 1;

